rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.role == 'admin'; }
    function isHost() { return isSignedIn() && request.auth.token.role == 'host'; }
    function isReceptionist() { return isSignedIn() && request.auth.token.role == 'receptionist'; }

    match /users/{userId} {
      allow create: if isAdmin();
      allow read: if isSignedIn();
      allow update: if isAdmin() || (request.auth.uid == userId);
      allow delete: if isAdmin();
    }

    match /visits/{visitId} {
      allow create: if isSignedIn() && (isReceptionist() || isAdmin());
      allow read: if isAdmin() || isReceptionist() || (isHost() && resource.data.hostId == request.auth.uid);
      allow update: if isAdmin() ||
                    (isReceptionist()) ||
                    (isHost() && resource.data.hostId == request.auth.uid &&
                      request.resource.data.keys().hasOnly(['checkOutTime','status','updatedAt']) &&
                      (request.resource.data.status in ['checked_out','checked_in','cancelled']));
      allow delete: if isAdmin();
    }

    match /hosts/{hostDoc} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /settings/{doc} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
